{"ast":null,"code":"var _jsxFileName = \"D:\\\\analystt\\\\analysttai\\\\src\\\\components\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nfunction Items(_ref) {\n  let {\n    currentItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Item #\", item]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n_c = Items;\nconst PaginatedItems = _ref2 => {\n  _s();\n  let {\n    itemsPerPage\n  } = _ref2;\n  const [itemOffset, setItemOffset] = useState(0);\n  const endOffset = itemOffset + itemsPerPage;\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PaginatedItems, \"T5lRYnT7FeIRYhFW34vLrQET4eA=\");\n_c2 = PaginatedItems;\nexport default PaginatedItems;\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"PaginatedItems\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","ReactPaginate","items","Items","currentItems","map","item","PaginatedItems","itemsPerPage","itemOffset","setItemOffset","endOffset","console","log","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected"],"sources":["D:/analystt/analysttai/src/components/home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\nfunction Items({ currentItems }) {\r\n  return (\r\n    <>\r\n      {currentItems &&\r\n        currentItems.map((item) => (\r\n          <div>\r\n            <h3>Item #{item}</h3>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PaginatedItems = ({itemsPerPage}) => {\r\n\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n  const endOffset = itemOffset + itemsPerPage;\r\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n  const currentItems = items.slice(itemOffset, endOffset);\r\n  const pageCount = Math.ceil(items.length / itemsPerPage);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n};\r\n\r\n    return ( \r\n        <>\r\n      <Items currentItems={currentItems} />\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n      />\r\n    </>\r\n     );\r\n}\r\n\r\nexport default PaginatedItems;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,aAAa,MAAM,gBAAgB;AAAC;AAAA;AAE3C,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAE7D,SAASC,KAAK,OAAmB;EAAA,IAAlB;IAAEC;EAAa,CAAC;EAC7B,oBACE;IAAA,UACGA,YAAY,IACXA,YAAY,CAACC,GAAG,CAAEC,IAAI,iBACpB;MAAA,uBACE;QAAA,WAAI,QAAM,EAACA,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAExB;EAAC,iBACH;AAEP;AAAC,KAXQH,KAAK;AAad,MAAMI,cAAc,GAAG,SAAoB;EAAA;EAAA,IAAnB;IAACC;EAAY,CAAC;EAEpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMY,SAAS,GAAGF,UAAU,GAAGD,YAAY;EAC3CI,OAAO,CAACC,GAAG,CAAE,sBAAqBJ,UAAW,OAAME,SAAU,EAAC,CAAC;EAC/D,MAAMP,YAAY,GAAGF,KAAK,CAACY,KAAK,CAACL,UAAU,EAAEE,SAAS,CAAC;EACvD,MAAMI,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACf,KAAK,CAACgB,MAAM,GAAGV,YAAY,CAAC;;EAExD;EACA,MAAMW,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAQ,GAAGd,YAAY,GAAIN,KAAK,CAACgB,MAAM;IAChEN,OAAO,CAACC,GAAG,CACR,8BAA6BO,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAAC,CAC7E;IACDX,aAAa,CAACW,SAAS,CAAC;EAC5B,CAAC;EAEG,oBACI;IAAA,wBACF,QAAC,KAAK;MAAC,YAAY,EAAEjB;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC,QAAC,aAAa;MACZ,UAAU,EAAC,KAAK;MAChB,SAAS,EAAC,QAAQ;MAClB,YAAY,EAAEe,eAAgB;MAC9B,kBAAkB,EAAE,CAAE;MACtB,SAAS,EAAEJ,SAAU;MACrB,aAAa,EAAC,YAAY;MAC1B,qBAAqB,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA,gBACD;AAEP,CAAC;AAAA,GAhCKR,cAAc;AAAA,MAAdA,cAAc;AAkCpB,eAAeA,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}